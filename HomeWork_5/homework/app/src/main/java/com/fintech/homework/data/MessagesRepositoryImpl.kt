package com.fintech.homework.data

import androidx.annotation.WorkerThread
import com.fintech.homework.repository.MessageRepository
import io.reactivex.rxjava3.core.Observable
import java.util.*
import java.util.concurrent.TimeUnit

internal class MessagesRepositoryImpl : MessageRepository {

    override fun loadMessages(): Observable<List<Message>> {
        return Observable.fromCallable { generateMessageList() }
            .delay(1000L, TimeUnit.MILLISECONDS)
    }

    @WorkerThread
    private fun generateMessageList(): List<Message> {
        val messageList = mutableListOf<Message>()
        for (i in 1..3) {
            val reactions = mutableListOf<Reaction>()
            for (j in 1..i) {
                reactions.add(Reaction(j, Emojies.getEmoji(0)))
            }
            messageList.add(
                Message(
                    i,
                    "user $i",
                    "Hardcoded you id = 1, emoji in this message generated by 1 - $i id",
                    reactions,
                    Date(Date().time - 86400000 * (3 - i)) //hardcoded date
                )
            )

        }
        return messageList
    }
}
